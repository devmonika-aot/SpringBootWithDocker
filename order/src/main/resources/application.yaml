

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/orderdb
    username: root
    password: root123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  application:
    name: ORDER-SERVICE
  config:
    import: configserver:http://localhost:9296
server:
  port: 8081
  #Actuator details
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
# Curcuit Breaker details

resilience4j:
  circuitbreaker:
    instances:
      serviceA:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slowCallRateThreshold: 30
        slowCallDurationThreshold: 5s
        slidingWindowType: COUNT_BASED

  #Let's assume you have minimumNumberOfCalls=3, slidingWindowSize = 10 and slidingWindowType =
  #COUNT_BASED: That means the CircuitBreaker is calculating the failure rate and slow call
  #rate based on the last 10 calls, as soon as 3 calls have been recorded.

  retry:
    instances:
      serviceA:
        registerHealthIndicator: true
        maxRetryAttempts: 5
        waitDuration: 10s
  ratelimiter:
    instances:
      serviceA:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 10s
        timeoutDuration: 3s
        #for 10 second interval , only 10 request are allowed and when we will hit 11th
        #request within 10 sec then it will wait for 3 second.




#---no need to to do below configuration as this is done in config server
#eureka.client.register-with-eureka = true
#eureka.client.fetch-registry = true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka


